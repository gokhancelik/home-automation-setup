apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "home-assistant.fullname" . }}
  labels:
    {{- include "home-assistant.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate  # Required for hostNetwork to avoid port conflicts
  selector:
    matchLabels:
      {{- include "home-assistant.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "home-assistant.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      {{- if .Values.networking.hostNetwork }}
      hostNetwork: true
      dnsPolicy: {{ .Values.networking.dnsPolicy }}
      {{- end }}
      {{- if .Values.securityContext }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- end }}
      initContainers:
      - name: prepare-env
        image: busybox
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}" > /shared/database_url
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretRef.name }}
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretRef.name }}
              key: password
        - name: POSTGRES_HOST
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretRef.name }}
              key: host
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretRef.name }}
              key: database
        volumeMounts:
        - name: shared-data
          mountPath: /shared
      - name: install-hacs
        image: alpine:latest
        command: ["/bin/sh", "-c"]
        args:
        - |
          # Install required packages
          apk add --no-cache wget bash
          
          if [ ! -d "/config/custom_components/hacs" ]; then
            echo "Installing HACS using official installer..."
            cd /config
            wget -O - https://get.hacs.xyz | bash -
            echo "HACS installed successfully"
          else
            echo "HACS already installed, skipping..."
          fi
        volumeMounts:
        {{- if .Values.persistence.enabled }}
        - name: data
          mountPath: /config
        {{- end }}
      containers:
      - name: home-assistant
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/bin/sh", "-c"]
        args:
        - |
          export DATABASE_URL=$(cat /shared/database_url)
          exec python -m homeassistant --config /config
        env:
        - name: TZ
          value: {{ .Values.env.TZ | quote }}
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretRef.name }}
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretRef.name }}
              key: password
        - name: POSTGRES_HOST
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretRef.name }}
              key: host
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretRef.name }}
              key: database
        ports:
        - containerPort: 8123
          name: http
        - containerPort: 5540
          name: matter-thread
          protocol: UDP
        - containerPort: 5580
          name: matter-comm
          protocol: UDP
        volumeMounts:
        - name: shared-data
          mountPath: /shared
        {{- if .Values.persistence.enabled }}
        - name: data
          mountPath: /config
        {{- end }}
        - name: configuration
          mountPath: /config/configuration.yaml
          subPath: configuration.yaml
          readOnly: true
      volumes:
      {{- if .Values.persistence.enabled }}
      - name: data
        persistentVolumeClaim:
          claimName: {{ include "home-assistant.fullname" . }}-data
      {{- end }}
      - name: configuration
        configMap:
          name: {{ include "home-assistant.fullname" . }}-config
      - name: shared-data
        emptyDir: {}
