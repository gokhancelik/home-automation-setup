apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "home-assistant.fullname" . }}
  labels:
    {{- include "home-assistant.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "home-assistant.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "home-assistant.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      initContainers:
      - name: prepare-env
        image: busybox
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}" > /shared/database_url
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretRef.name }}
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretRef.name }}
              key: password
        - name: POSTGRES_HOST
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretRef.name }}
              key: host
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretRef.name }}
              key: database
        volumeMounts:
        - name: shared-data
          mountPath: /shared
      containers:
      - name: home-assistant
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/bin/sh", "-c"]
        args:
        - |
          export DATABASE_URL=$(cat /shared/database_url)
          exec python -m homeassistant --config /config
        env:
        - name: TZ
          value: {{ .Values.env.TZ | quote }}
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretRef.name }}
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretRef.name }}
              key: password
        - name: POSTGRES_HOST
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretRef.name }}
              key: host
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretRef.name }}
              key: database
        ports:
        - containerPort: 8123
          name: http
        volumeMounts:
        - name: shared-data
          mountPath: /shared
        {{- if .Values.persistence.enabled }}
        - name: data
          mountPath: /config
        {{- end }}
        - name: configuration
          mountPath: /config/configuration.yaml
          subPath: configuration.yaml
          readOnly: true
        - name: configuration
          mountPath: /config/automations.yaml
          subPath: automations.yaml
          readOnly: true
        - name: configuration
          mountPath: /config/scripts.yaml
          subPath: scripts.yaml
          readOnly: true
        - name: configuration
          mountPath: /config/scenes.yaml
          subPath: scenes.yaml
          readOnly: true
      volumes:
      {{- if .Values.persistence.enabled }}
      - name: data
        persistentVolumeClaim:
          claimName: {{ include "home-assistant.fullname" . }}-data
      {{- end }}
      - name: configuration
        configMap:
          name: {{ include "home-assistant.fullname" . }}-config
      - name: shared-data
        emptyDir: {}
