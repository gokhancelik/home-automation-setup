apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: elasticsearch
  namespace: elastic-system
spec:
  interval: 15m
  timeout: 15m
  chart:
    spec:
      chart: elasticsearch
      version: "8.5.1"
      sourceRef:
        kind: HelmRepository
        name: elastic
        namespace: flux-system
  values:
    # Single node setup
    replicas: 1
    
    # Explicitly disable master node settings
    masterService: ""
    
    # Resources
    resources:
      requests:
        cpu: "500m"
        memory: "2Gi"
      limits:
        cpu: "1000m"
        memory: "4Gi"
    
    # JVM heap settings
    esJavaOpts: "-Xmx1g -Xms1g"
    
    persistence:
      enabled: true
      storageClass: "ssd-storage"
      size: "10Gi"
    
    # Override cluster settings completely
    esConfig:
      elasticsearch.yml: |
        cluster.name: "elasticsearch"
        network.host: 0.0.0.0
        http.host: 0.0.0.0
        http.port: 9200
        discovery.type: single-node
        xpack.security.enabled: false
        xpack.security.enrollment.enabled: false
        xpack.security.http.ssl.enabled: false
        xpack.security.transport.ssl.enabled: false
        xpack.ml.enabled: false
        action.auto_create_index: true
    
    # Environment variables to override defaults
    extraEnvs:
      - name: discovery.type
        value: single-node
      - name: ES_JAVA_OPTS
        value: "-Xmx1g -Xms1g"
    
    # Protocol settings - ensure HTTP is used
    protocol: http
    httpPort: 9200
    
    # Fix readiness probe for single node
    readinessProbe:
      exec:
        command:
          - bash
          - -c
          - |
            curl -s http://localhost:9200/_cluster/health | grep -q '"status":"green"\|"status":"yellow"'
      initialDelaySeconds: 20
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
    
    # Also fix liveness probe
    livenessProbe:
      exec:
        command:
          - bash
          - -c
          - |
            curl -s http://localhost:9200/_cluster/health | grep -q '"status":"green"\|"status":"yellow"'
      initialDelaySeconds: 30
      periodSeconds: 20
      timeoutSeconds: 5
      failureThreshold: 6
    
    # Service settings - ensure they match
    service:
      type: ClusterIP
      annotations: {}
      httpPort: 9200
      
    # Set container ports explicitly
    podSecurityContext:
      fsGroup: 1000
    securityContext:
      capabilities:
        drop:
        - ALL
      runAsNonRoot: true
      runAsUser: 1000
    
    # Cluster health check for chart
    clusterHealthCheckParams: "wait_for_status=yellow"